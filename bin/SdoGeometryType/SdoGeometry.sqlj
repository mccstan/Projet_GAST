package SdoGeometryType;

import java.sql.SQLException;
import java.sql.Connection;
import oracle.jdbc.OracleTypes;
import oracle.sql.ORAData;
import oracle.sql.ORADataFactory;
import oracle.sql.Datum;
import oracle.sql.STRUCT;
import oracle.jpub.runtime.MutableStruct;
import sqlj.runtime.ref.DefaultContext;
import sqlj.runtime.ConnectionContext;

public class SdoGeometry implements ORAData, ORADataFactory
{
  public static final String _SQL_NAME = "MDSYS.SDO_GEOMETRY";
  public static final int _SQL_TYPECODE = OracleTypes.STRUCT;

  /* connection management */
  protected Connection __onn = null;
  protected javax.sql.DataSource __dataSource = null;
  public void setDataSource(javax.sql.DataSource dataSource) throws SQLException
  { release(); __dataSource = dataSource; }
  public void setDataSourceLocation(String dataSourceLocation) throws SQLException {
    javax.sql.DataSource dataSource;
    try {
      Class cls = Class.forName("javax.naming.InitialContext");
      Object ctx = cls.newInstance();
      java.lang.reflect.Method meth = cls.getMethod("lookup", new Class[]{String.class});
      dataSource = (javax.sql.DataSource) meth.invoke(ctx, new Object[]{"java:comp/env/" + dataSourceLocation});
      setDataSource(dataSource);
    } catch (Exception e) {
      throw new java.sql.SQLException("Error initializing DataSource at " + dataSourceLocation + ": " + e.getMessage());
    }
  }
  public Connection getConnection() throws SQLException
  { 
    if (__onn!=null) return __onn;
     else if (__tx!=null) return __tx.getConnection(); 
     else if (__dataSource!=null) __onn= __dataSource.getConnection(); 
     return __onn; 
   } 
  public void release() throws SQLException
  { if (__tx!=null && __onn!=null) __tx.close(ConnectionContext.KEEP_CONNECTION);
    __onn = null; __tx = null;
    __dataSource = null;
  }

  public void closeConnection(){
    if (__dataSource!=null) {
      try { if (__onn!=null) { __onn.close(); } } catch (java.sql.SQLException e) {}
      try { if (__tx!=null) {__tx.close(); } } catch (java.sql.SQLException e) {}
      __onn=null;
      __tx=null;
    }
  }
  protected DefaultContext __tx = null;
  public void setConnectionContext(DefaultContext ctx) throws SQLException
  { release(); __tx = ctx; }
  public DefaultContext getConnectionContext() throws SQLException
  { if (__tx==null)
    { __tx = (getConnection()==null) ? DefaultContext.getDefaultContext() : new DefaultContext(getConnection()); }
    return __tx;
  };
  protected MutableStruct _struct;

  protected static int[] _sqlType =  { 2,2,2002,2003,2003 };
  protected static ORADataFactory[] _factory = new ORADataFactory[5];
  static
  {
    _factory[2] = SdoPointType.getORADataFactory();
    _factory[3] = SdoElemInfoArray.getORADataFactory();
    _factory[4] = SdoOrdinateArray.getORADataFactory();
  }
  protected static final SdoGeometry _SdoGeometryFactory = new SdoGeometry();

  public static ORADataFactory getORADataFactory()
  { return _SdoGeometryFactory; }
  /* constructors */
  protected void _init_struct(boolean init)
  { if (init) _struct = new MutableStruct(new Object[5], _sqlType, _factory); }
  public SdoGeometry()
  { _init_struct(true); __tx = DefaultContext.getDefaultContext(); }
  public SdoGeometry(DefaultContext c) /*throws SQLException*/
  { _init_struct(true); __tx = c; }
  public SdoGeometry(Connection c) /*throws SQLException*/
  { _init_struct(true); __onn = c; }
  public SdoGeometry(java.math.BigDecimal sdoGtype, java.math.BigDecimal sdoSrid, SdoPointType sdoPoint, SdoElemInfoArray sdoElemInfo, SdoOrdinateArray sdoOrdinates) throws SQLException
  {
    _init_struct(true);
    setSdoGtype(sdoGtype);
    setSdoSrid(sdoSrid);
    setSdoPoint(sdoPoint);
    setSdoElemInfo(sdoElemInfo);
    setSdoOrdinates(sdoOrdinates);
  }

  /* ORAData interface */
  public Datum toDatum(Connection c) throws SQLException
  {
    if (__tx!=null && __onn!=c) release();
    __onn = c;
    return _struct.toDatum(c, _SQL_NAME);
  }


  /* ORADataFactory interface */
  public ORAData create(Datum d, int sqlType) throws SQLException
  { return create(null, d, sqlType); }
  public void setFrom(SdoGeometry o) throws SQLException
  { setContextFrom(o); setValueFrom(o); }
  protected void setContextFrom(SdoGeometry o) throws SQLException
  { release(); __tx = o.__tx; __onn = o.__onn; }
  protected void setValueFrom(SdoGeometry o) { _struct = o._struct; }
  protected ORAData create(SdoGeometry o, Datum d, int sqlType) throws SQLException
  {
    if (d == null) { if (o!=null) { o.release(); }; return null; }
    if (o == null) o = new SdoGeometry();
    o._struct = new MutableStruct((STRUCT) d, _sqlType, _factory);
    o.__onn = ((STRUCT) d).getJavaSqlConnection();
    return o;
  }
  /* accessor methods */
  public java.math.BigDecimal getSdoGtype() throws SQLException
  { return (java.math.BigDecimal) _struct.getAttribute(0); }

  public void setSdoGtype(java.math.BigDecimal sdoGtype) throws SQLException
  { _struct.setAttribute(0, sdoGtype); }


  public java.math.BigDecimal getSdoSrid() throws SQLException
  { return (java.math.BigDecimal) _struct.getAttribute(1); }

  public void setSdoSrid(java.math.BigDecimal sdoSrid) throws SQLException
  { _struct.setAttribute(1, sdoSrid); }


  public SdoPointType getSdoPoint() throws SQLException
  { return (SdoPointType) _struct.getAttribute(2); }

  public void setSdoPoint(SdoPointType sdoPoint) throws SQLException
  { _struct.setAttribute(2, sdoPoint); }


  public SdoElemInfoArray getSdoElemInfo() throws SQLException
  { return (SdoElemInfoArray) _struct.getAttribute(3); }

  public void setSdoElemInfo(SdoElemInfoArray sdoElemInfo) throws SQLException
  { _struct.setAttribute(3, sdoElemInfo); }


  public SdoOrdinateArray getSdoOrdinates() throws SQLException
  { return (SdoOrdinateArray) _struct.getAttribute(4); }

  public void setSdoOrdinates(SdoOrdinateArray sdoOrdinates) throws SQLException
  { _struct.setAttribute(4, sdoOrdinates); }


  public java.math.BigDecimal getDims ()
  throws java.sql.SQLException
  {
    SdoGeometry __jPt_temp = (SdoGeometry) this;
    java.math.BigDecimal __jPt_result;
 try {
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.GET_DIMS();
      END;
    };
 } catch(java.sql.SQLException _err) {
   try {
      getConnectionContext().getExecutionContext().close();
      closeConnection();
      if (__dataSource==null) throw _err;
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.GET_DIMS();
      END;
    };
   } catch (java.sql.SQLException _err2) { 
     try { getConnectionContext().getExecutionContext().close(); } catch (java.sql.SQLException _sqle) {}
     throw _err; 
  }
 }
    return __jPt_result;
  }

  public java.math.BigDecimal getGtype ()
  throws java.sql.SQLException
  {
    SdoGeometry __jPt_temp = (SdoGeometry) this;
    java.math.BigDecimal __jPt_result;
 try {
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.GET_GTYPE();
      END;
    };
 } catch(java.sql.SQLException _err) {
   try {
      getConnectionContext().getExecutionContext().close();
      closeConnection();
      if (__dataSource==null) throw _err;
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.GET_GTYPE();
      END;
    };
   } catch (java.sql.SQLException _err2) { 
     try { getConnectionContext().getExecutionContext().close(); } catch (java.sql.SQLException _sqle) {}
     throw _err; 
  }
 }
    return __jPt_result;
  }

  public java.math.BigDecimal getLrsDim ()
  throws java.sql.SQLException
  {
    SdoGeometry __jPt_temp = (SdoGeometry) this;
    java.math.BigDecimal __jPt_result;
 try {
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.GET_LRS_DIM();
      END;
    };
 } catch(java.sql.SQLException _err) {
   try {
      getConnectionContext().getExecutionContext().close();
      closeConnection();
      if (__dataSource==null) throw _err;
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.GET_LRS_DIM();
      END;
    };
   } catch (java.sql.SQLException _err2) { 
     try { getConnectionContext().getExecutionContext().close(); } catch (java.sql.SQLException _sqle) {}
     throw _err; 
  }
 }
    return __jPt_result;
  }

  public oracle.sql.BLOB getWkb ()
  throws java.sql.SQLException
  {
    SdoGeometry __jPt_temp = (SdoGeometry) this;
    oracle.sql.BLOB __jPt_result;
 try {
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.GET_WKB();
      END;
    };
 } catch(java.sql.SQLException _err) {
   try {
      getConnectionContext().getExecutionContext().close();
      closeConnection();
      if (__dataSource==null) throw _err;
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.GET_WKB();
      END;
    };
   } catch (java.sql.SQLException _err2) { 
     try { getConnectionContext().getExecutionContext().close(); } catch (java.sql.SQLException _sqle) {}
     throw _err; 
  }
 }
    return __jPt_result;
  }

  public oracle.sql.CLOB getWkt ()
  throws java.sql.SQLException
  {
    SdoGeometry __jPt_temp = (SdoGeometry) this;
    oracle.sql.CLOB __jPt_result;
 try {
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.GET_WKT();
      END;
    };
 } catch(java.sql.SQLException _err) {
   try {
      getConnectionContext().getExecutionContext().close();
      closeConnection();
      if (__dataSource==null) throw _err;
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.GET_WKT();
      END;
    };
   } catch (java.sql.SQLException _err2) { 
     try { getConnectionContext().getExecutionContext().close(); } catch (java.sql.SQLException _sqle) {}
     throw _err; 
  }
 }
    return __jPt_result;
  }

  public SdoGeometry sdoGeometry (
    oracle.sql.CLOB WKT,
    Integer SRID,
    SdoGeometry __jPt_out[])
  throws java.sql.SQLException
  {
    SdoGeometry __jPt_temp = (SdoGeometry) this;
    SdoGeometry __jPt_result;
 try {
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := SDO_GEOMETRY(
      :WKT,
      :SRID);
      END;
    };
    __jPt_out[0] = __jPt_temp;
 } catch(java.sql.SQLException _err) {
   try {
      getConnectionContext().getExecutionContext().close();
      closeConnection();
      if (__dataSource==null) throw _err;
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := SDO_GEOMETRY(
      :WKT,
      :SRID);
      END;
    };
    __jPt_out[0] = __jPt_temp;
   } catch (java.sql.SQLException _err2) { 
     try { getConnectionContext().getExecutionContext().close(); } catch (java.sql.SQLException _sqle) {}
     throw _err; 
  }
 }
    return __jPt_result;
  }

  public SdoGeometry sdoGeometry (
    String WKT,
    Integer SRID,
    SdoGeometry __jPt_out[])
  throws java.sql.SQLException
  {
    SdoGeometry __jPt_temp = (SdoGeometry) this;
    SdoGeometry __jPt_result;
 try {
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := SDO_GEOMETRY(
      :WKT,
      :SRID);
      END;
    };
    __jPt_out[0] = __jPt_temp;
 } catch(java.sql.SQLException _err) {
   try {
      getConnectionContext().getExecutionContext().close();
      closeConnection();
      if (__dataSource==null) throw _err;
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := SDO_GEOMETRY(
      :WKT,
      :SRID);
      END;
    };
    __jPt_out[0] = __jPt_temp;
   } catch (java.sql.SQLException _err2) { 
     try { getConnectionContext().getExecutionContext().close(); } catch (java.sql.SQLException _sqle) {}
     throw _err; 
  }
 }
    return __jPt_result;
  }

  public SdoGeometry sdoGeometry (
    oracle.sql.BLOB WKB,
    Integer SRID,
    SdoGeometry __jPt_out[])
  throws java.sql.SQLException
  {
    SdoGeometry __jPt_temp = (SdoGeometry) this;
    SdoGeometry __jPt_result;
 try {
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := SDO_GEOMETRY(
      :WKB,
      :SRID);
      END;
    };
    __jPt_out[0] = __jPt_temp;
 } catch(java.sql.SQLException _err) {
   try {
      getConnectionContext().getExecutionContext().close();
      closeConnection();
      if (__dataSource==null) throw _err;
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := SDO_GEOMETRY(
      :WKB,
      :SRID);
      END;
    };
    __jPt_out[0] = __jPt_temp;
   } catch (java.sql.SQLException _err2) { 
     try { getConnectionContext().getExecutionContext().close(); } catch (java.sql.SQLException _sqle) {}
     throw _err; 
  }
 }
    return __jPt_result;
  }

  public Integer stCoorddim ()
  throws java.sql.SQLException
  {
    SdoGeometry __jPt_temp = (SdoGeometry) this;
    Integer __jPt_result;
 try {
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.ST_COORDDIM();
      END;
    };
 } catch(java.sql.SQLException _err) {
   try {
      getConnectionContext().getExecutionContext().close();
      closeConnection();
      if (__dataSource==null) throw _err;
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.ST_COORDDIM();
      END;
    };
   } catch (java.sql.SQLException _err2) { 
     try { getConnectionContext().getExecutionContext().close(); } catch (java.sql.SQLException _sqle) {}
     throw _err; 
  }
 }
    return __jPt_result;
  }

  public Integer stIsvalid ()
  throws java.sql.SQLException
  {
    SdoGeometry __jPt_temp = (SdoGeometry) this;
    Integer __jPt_result;
 try {
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.ST_ISVALID();
      END;
    };
 } catch(java.sql.SQLException _err) {
   try {
      getConnectionContext().getExecutionContext().close();
      closeConnection();
      if (__dataSource==null) throw _err;
    #sql [getConnectionContext()] {
      BEGIN
      :OUT __jPt_result := :__jPt_temp.ST_ISVALID();
      END;
    };
   } catch (java.sql.SQLException _err2) { 
     try { getConnectionContext().getExecutionContext().close(); } catch (java.sql.SQLException _sqle) {}
     throw _err; 
  }
 }
    return __jPt_result;
  }
}
